// <auto-generated />
using System;
using CarViewer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarViewer.Data.Migrations
{
    [DbContext(typeof(CarContext))]
    partial class CarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("CarViewer.Data.Domain.BodyConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DoorCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SeatCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WindowCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BodyConfiguration", (string)null);
                });

            modelBuilder.Entity("CarViewer.Data.Domain.Car", b =>
                {
                    b.Property<string>("VIN")
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<int>("Mileage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("VIN");

                    b.HasIndex("ModelId");

                    b.ToTable("Car", (string)null);
                });

            modelBuilder.Entity("CarViewer.Data.Domain.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Manufacturer", (string)null);
                });

            modelBuilder.Entity("CarViewer.Data.Domain.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BodyConfigurationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DriveTrain")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Transmission")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BodyConfigurationId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Model", (string)null);
                });

            modelBuilder.Entity("CarViewer.Data.Domain.ServiceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarVIN")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MileageToDate")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarVIN");

                    b.ToTable("ServiceRecord", (string)null);
                });

            modelBuilder.Entity("CarViewer.Data.Domain.Car", b =>
                {
                    b.HasOne("CarViewer.Data.Domain.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("CarViewer.Data.Domain.Model", b =>
                {
                    b.HasOne("CarViewer.Data.Domain.BodyConfiguration", "BodyConfiguration")
                        .WithMany()
                        .HasForeignKey("BodyConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarViewer.Data.Domain.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BodyConfiguration");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("CarViewer.Data.Domain.ServiceRecord", b =>
                {
                    b.HasOne("CarViewer.Data.Domain.Car", null)
                        .WithMany("ServiceRecords")
                        .HasForeignKey("CarVIN");
                });

            modelBuilder.Entity("CarViewer.Data.Domain.Car", b =>
                {
                    b.Navigation("ServiceRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
